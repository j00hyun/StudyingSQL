CREATE TABLE PRACTICE.ORDER_HIST 
(	
    ORD_DT VARCHAR2(8 BYTE), 
    MEDIA_CD VARCHAR2(2 BYTE), 
    ORD_AMT NUMBER(8,0)
);

INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190801','10',25000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190801','20',40000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190801','20',32000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190801','10',12000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190801','30',8000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190802','10',31000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190802','10',22800);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190802','30',25000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190802','30',7900);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190802','30',250000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190803','10',17500);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190803','10',44000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190804','30',76000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190804','30',29000);
INSERT INTO PRACTICE.ORDER_HIST VALUES ('20190804','30',10000);

CREATE TABLE PRACTICE.MEDIA 
(	
    MEDIA_CD VARCHAR2(2 BYTE), 
    MEDIA_NM VARCHAR2(10 BYTE)
);

INSERT INTO PRACTICE.MEDIA VALUES ('10','TV');
INSERT INTO PRACTICE.MEDIA VALUES ('20','PC');
INSERT INTO PRACTICE.MEDIA VALUES ('30','MOBILE');

-- 주문 테이블
SELECT * FROM PRACTICE.ORDER_HIST;

-- 매체 테이블 
SELECT * FROM PRACTICE.MEDIA;

-- 1일은 10, 20, 30 매체가 출력되었지만 2일은 10, 30 매체만 3일은 10 매체만 출력됨
SELECT A.ORD_DT, A.MEDIA_CD, SUM(A.ORD_AMT) ATM
  FROM PRACTICE.ORDER_HIST A
 GROUP BY A.ORD_DT, A.MEDIA_CD
 ORDER BY A.ORD_DT;

-- PARTITION OUTER JOIN을 통해 일별로 모든 매체 출력
-- A: driven 테이블, B: driving 테이블
SELECT A.ORD_DT, B.MEDIA_CD, SUM(A.ORD_AMT) ATM
  FROM PRACTICE.MEDIA B
  LEFT OUTER JOIN PRACTICE.ORDER_HIST A PARTITION BY (A.ORD_DT)
    ON B.MEDIA_CD = A.MEDIA_CD
 GROUP BY A.ORD_DT, B.MEDIA_CD
 ORDER BY A.ORD_DT;

-- MEDIA_NM: 코드 대신 이름으로 출력
-- NVL: null값으로 입력된 ATM 값을 0으로 수정
-- ROLLUP: 일별 총 매출과 전체 총 매출 추가 출력
SELECT A.ORD_DT, B.MEDIA_NM, NVL(SUM(A.ORD_AMT), 0) ATM
  FROM PRACTICE.MEDIA B
  LEFT OUTER JOIN PRACTICE.ORDER_HIST A PARTITION BY (A.ORD_DT)
    ON B.MEDIA_CD = A.MEDIA_CD
 GROUP BY ROLLUP(A.ORD_DT, B.MEDIA_NM)
 ORDER BY A.ORD_DT;