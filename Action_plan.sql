ALTER SESSION SET STATISTICS_LEVEL = ALL;

-- FULL SCAN이 일어난 이유
--  EMPLOYEE_ID가 인덱스로 지정되어 있지만 해당 컬럼은 NUMBER
--  LIKE '2%'로 TO_CHAR 함수로 가공되었기 때문에 인덱스를 타지 않음
SELECT *
  FROM HR.EMPLOYEES
 WHERE EMPLOYEE_ID LIKE '2%';

-- INDEX RANGE SCAN을 이용해 Buffer 수 감소
SELECT *
  FROM HR.EMPLOYEES
 WHERE EMPLOYEE_ID > 200;
 
-- 다른 컬럼을 위한 TABLE ACCESS 없이 오로지 인덱스의 컬럼만 출력하므로 Buffer 수 또 감소
SELECT EMPLOYEE_ID
  FROM HR.EMPLOYEES
 WHERE EMPLOYEE_ID > 200;
 
-- 3 -> 2 -> 4 -> 1 -> 0 번 순으로 실행계획 해석
--  INDEX UNIQUE SCAN을 통해 DEPARTMENT 테이블에 접근하여 DEPARTMENT_ID = 50인 데이터 출력
--  EMPLOYEES 테이블을 FULL SCAN 하여 NESTED LOOPS로 조인
--  Driving table: DEPARTMENT, Driven table: EMPLOYEES
SELECT D.DEPARTMENT_ID,
       D.DEPARTMENT_NAME,
       E.EMPLOYEE_ID,
       E.FIRST_NAME,
       E.LAST_NAME
  FROM HR.DEPARTMENTS D,
       HR.EMPLOYEES E
 WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
   AND D.DEPARTMENT_ID = 50;

SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_CURSOR(null, null, 'ALLSTATS LAST'));