SELECT * FROM STARBUCKS_ORDER;

-- 가장 많이 판 날부터 순위 매기기
SELECT ORDER_DT,
       COUNT(*)
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT
 ORDER BY ORDER_DT;
 
--      RANK: 7위가 3개 있으므로 그 다음 순위는 10위
SELECT ORDER_DT,
       COUNT(*),
       RANK() OVER(ORDER BY COUNT(*) DESC) AS RANK
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT;
 
 --     DENSE_RANK: 7위가 여러개여도 그 다음 순위는 8위
SELECT ORDER_DT,
       COUNT(*),
       DENSE_RANK() OVER(ORDER BY COUNT(*) DESC) AS RANK
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT;
 
 --     ROW_NUMBER: 같은 양을 팔았어도 모두 다른 순위
SELECT ORDER_DT,
       COUNT(*),
       ROW_NUMBER() OVER(ORDER BY COUNT(*) DESC) AS RANK
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT;
 
-- 날짜 별, 음료 별 순위 매기기
-- ex) 8월 1일 내에서 판매량이 많은 음료 순으로 순위 매기고, 다음 날은 다시 1위부터 순위 매김
SELECT ORDER_DT,
       ORDER_ITEM,
       COUNT(*)
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT, ORDER_ITEM
 ORDER BY ORDER_DT;
 
--      RANK
SELECT ORDER_DT,
       ORDER_ITEM,
       COUNT(*),
       RANK() OVER(PARTITION BY ORDER_DT ORDER BY COUNT(*) DESC) AS RANK
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT, ORDER_ITEM
 ORDER BY ORDER_DT;
 
--      ROW_NUMBER
SELECT ORDER_DT,
       ORDER_ITEM,
       COUNT(*),
       ROW_NUMBER() OVER(PARTITION BY ORDER_DT ORDER BY COUNT(*) DESC) AS RANK
  FROM STARBUCKS_ORDER
 GROUP BY ORDER_DT, ORDER_ITEM
 ORDER BY ORDER_DT;
 
-- 날마다 가장 잘 팔린 음료만 출력
SELECT * FROM (
    SELECT ORDER_DT,
           ORDER_ITEM,
           COUNT(*),
           ROW_NUMBER() OVER(PARTITION BY ORDER_DT ORDER BY COUNT(*) DESC) AS RANK
      FROM STARBUCKS_ORDER
     GROUP BY ORDER_DT, ORDER_ITEM
) WHERE RANK = 1;

-- 날마다 2번째로 잘 팔린 음료만 출력
SELECT * FROM (
    SELECT ORDER_DT,
           ORDER_ITEM,
           COUNT(*),
           ROW_NUMBER() OVER(PARTITION BY ORDER_DT ORDER BY COUNT(*) DESC) AS RANK
      FROM STARBUCKS_ORDER
     GROUP BY ORDER_DT, ORDER_ITEM
) WHERE RANK = 2;