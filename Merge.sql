CREATE TABLE PRACTICE.MELON_CHART (
	RANKING	NUMBER,
	SINGER	VARCHAR2(30),
	SONG	VARCHAR2(200),
	REMARK	VARCHAR2(100)
);

INSERT INTO PRACTICE.MELON_CHART VALUES (1, '아이유', '에잇', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (2, '아이즈원', '환상동화', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (3, '블루', 'Downtown Baby', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (4, '오마이걸', '살짝 설렜어', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (5, '트와이스', 'More and More', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (6, '조정석', '아로하', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (7, '아이유', 'Into the I-LAND', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (8, '전미도', '사랑하게 될 줄 알았어', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (9, '조이', '좋은 사람 있으면 소개시켜줘', '');
INSERT INTO PRACTICE.MELON_CHART VALUES (10, '식케이', '깡', '');


CREATE TABLE PRACTICE.MELON_CHART_NEW (
	RANKING	NUMBER,
	SINGER	VARCHAR2(30),
	SONG	VARCHAR2(200),
	REMARK	VARCHAR2(100)
);

INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (1, '세븐틴', 'Left and Right', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (2, '아이즈원', '환상동화', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (3, '블랙핑크', 'How You Like That', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (4, '화사', '마리아', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (5, '조이', '좋은 사람 있으면 소개시켜줘', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (6, '아이유', 'Into the I-LAND', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (7, '트와이스', 'More and More', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (8, '오마이걸', '살짝 설렜어', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (9, '지코', 'Summer Hate', '');
INSERT INTO PRACTICE.MELON_CHART_NEW VALUES (10, '선미', '보랏빛 밤', '');

-- 저번주 멜론 차트
SELECT * FROM PRACTICE.MELON_CHART;

-- 이번주 멜론 차트
SELECT * FROM PRACTICE.MELON_CHART_NEW;

-- MELON_CHART 를 MELON_CHART_NEW 내용을 토대로 업데이트
MERGE INTO PRACTICE.MELON_CHART M1 -- MELON_CHART 테이블에 반영
USING PRACTICE.MELON_CHART_NEW M2 -- MELON_CHART_NEW 테이블을 이용
ON (M1.SINGER = M2.SINGER AND M1.SONG = M2.SONG) -- 두 테이블에 동일한 가수와 노래 제목을 가진 행이 있다면
WHEN MATCHED THEN
    UPDATE SET M1.RANKING = M2.RANKING, M1.REMARK = 'CONTINUE' -- MELON_CHART의 랭킹을 MELON_CHART_NEW의 랭킹 정보로 업데이트
WHEN NOT MATCHED THEN -- 두 테이블에 서로 다른 가수와 노래 제목을 가진 행이 있다면 
    INSERT VALUES (M2.RANKING, M2.SINGER, M2.SONG, 'NEW'); -- MELON_CHART에 새로운 MELON_CHART_NEW 데이터 삽입
    
-- REMARK가 null인 값들은 저번주에는 멜론 차트에 있었지만 이번주엔 밀려나 없는 곡들
SELECT * FROM PRACTICE.MELON_CHART;

SELECT * FROM PRACTICE.MELON_CHART WHERE REMARK IS NOT NULL ORDER BY RANKING;
